{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","stop","setStop","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","className","options","height","width","isStopped","isClickToPauseDisabled","ariaRole","eventListeners","eventName","callback","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAwCeA,MAnCf,WAAgB,IAAD,EACWC,oBAAS,GADpB,mBACNC,EADM,KACAC,EADA,KAGPC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,gBACAC,iBAAkB,CAChBC,oBAAqB,mBAIzB,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,IAAD,CACEC,QAASP,EACTQ,OAAO,SACPC,MAAM,SACNC,UAAWZ,EACXa,wBAAwB,EACxBC,SAAS,GACTC,eAAgB,CACd,CACEC,UAAW,WACXC,SAAU,kBAAMhB,GAAQ,QAI9B,wBAAQiB,QAAS,kBAAMjB,GAAQ,IAAQO,UAAU,aAAaW,UAAWnB,EAAzE,yBCtBOoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ef127092.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Lottie from 'react-lottie';\nimport animationData from './animation.json';\n\nfunction App() {\n  const [stop, setStop] = useState(true);\n\n  const defaultOptions = {\n    loop: false,\n    autoplay: false,\n    animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Lottie\n          options={defaultOptions}\n          height='50vmin'\n          width='50vmin'\n          isStopped={stop}\n          isClickToPauseDisabled={true}\n          ariaRole=''\n          eventListeners={[\n            {\n              eventName: 'complete',\n              callback: () => setStop(true),\n            },\n          ]}\n        />\n        <button onClick={() => setStop(false)} className='App-button' disabled={!stop}>Start</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}